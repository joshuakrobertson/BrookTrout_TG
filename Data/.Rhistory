grid.arrange(Mass.plot1, Mass.plot2, Maternal.Bin, Paternal.Bin, Offspring.Bin,
Details, nrow = 3, top = "Mass by Group")
RMR.by.Treat = ggplot(data = N.Mass.Spec, aes(x = as.factor(Parent.group), y = RMR)) +
my.theme + theme_bw() + geom_boxplot(fill = "cadetblue") + xlab("Parent Group") +
ylab("Resting Metabolic Rate \n (mg O2/h)")
MMR.by.Treat = ggplot(data = N.Mass.Spec, aes(x = as.factor(Parent.group), y = AAS)) +
my.theme + theme_bw() + geom_boxplot(fill = "palegreen3") + xlab("Parent Group") +
ylab("Maximum Metabolic Rate \n (mg O2/h)")
AAS.by.Treat = ggplot(data = N.Mass.Spec, aes(x = as.factor(Parent.group), y = RMR)) +
my.theme + theme_bw() + geom_boxplot(fill = "tomato1") + xlab("Parent Group")	+
ylab("Absolute Aerobic Scope")
CTM.by.Treat = ggplot(data = N.Mass.Spec, aes(x = as.factor(Parent.group), y = CTM)) +
my.theme + theme_bw() + geom_boxplot(fill = "thistle") + xlab("Parent Group") +
ylab("Critical Thermal Maximum \n (Degrees C)")
grid.arrange(RMR.by.Treat, MMR.by.Treat, AAS.by.Treat, CTM.by.Treat,
nrow = 2, top = "Metabolic Rate, Scope, and Critical Thermal Max by Treatment")
RMR.by.Fam = ggplot(data = N.Mass.Spec, aes(x = as.factor(Family), y = RMR)) +
my.theme + theme_bw() + geom_boxplot(fill = "cadetblue") + xlab("Parent Group") +
ylab("Resting Metabolic Rate \n (mg O2/h)")
MMR.by.Fam = ggplot(data = N.Mass.Spec, aes(x = as.factor(Family), y = MMR)) +
my.theme + theme_bw() + geom_boxplot(fill = "palegreen3") + xlab("Family") +
ylab("Maximum Metabolic Rate \n (mg O2/h)")
AAS.by.Fam = ggplot(data = N.Mass.Spec, aes(x = as.factor(Family), y = AAS)) +
my.theme + theme_bw() + geom_boxplot(fill = "tomato1") + xlab("Family")	+
ylab("Absolute Aerobic Scope")
CTM.by.Fam = ggplot(data = N.Mass.Spec, aes(x = as.factor(Family), y = CTM)) +
my.theme + theme_bw() + geom_boxplot(fill = "thistle") + xlab("Family") +
ylab("Critical Thermal Maximum \n (Degrees C)")
grid.arrange(RMR.by.Fam, MMR.by.Fam, AAS.by.Fam, CTM.by.Fam,
nrow = 2, top = "Metabolic Rate, Scope, and Critical Thermal Max by Family")
RMR.MS.by.Treat = ggplot(data = Mass.Spec, aes(x = as.factor(Parent.group), y = RMR.MS, fill = Offspring.Acc)) +
my.theme + theme_bw() + geom_boxplot() + xlab("Parent Group") + theme(legend.position = "top") +
annotate("rect", xmin = 0.6, xmax = 2.4, ymin = 80, ymax = 570, alpha = .2) +
ylab("Mass Specific Resting \n Metabolic Rate(mg O2/kg/h)")
MMR.MS.by.Treat = ggplot(data = Mass.Spec, aes(x = as.factor(Parent.group), y = MMR.MS, fill = Offspring.Acc)) +
my.theme + theme_bw() + geom_boxplot() + xlab("Parent Group") + theme(legend.position = "top") +
annotate("rect", xmin = 0.6, xmax = 2.4, ymin = 225, ymax = 610, alpha = .2) +
ylab("Mass Specific Maximum \n Metabolic Rate (mg O2/kg/h)")
AAS.MS.by.Treat = ggplot(data = Mass.Spec, aes(x = as.factor(Parent.group), y = AAS.MS, fill = Offspring.Acc)) +
my.theme + theme_bw() + geom_boxplot() + xlab("Parent Group") + theme(legend.position = "top") +
annotate("rect", xmin = 0.6, xmax = 2.4, ymin = 100, ymax = 450, alpha = .2) +
ylab("Mass Specific Absolute \n Aerobic Scope")
Details = ggplot(data = data.frame("x" = c(1:100), "y" = c(1:100)), aes(x = x, y = y)) +
theme_void() + theme(legend.position="none") + annotate("text", x = 25, y = 70, label =
"Grey boxes highlight parental \n group by offspring \n acclimation interactions.")
grid.arrange(RMR.MS.by.Treat, MMR.MS.by.Treat, AAS.MS.by.Treat, Details,
nrow = 2, top = "Mass Specific Metabolic Rate and Scope by Treatment")
grid.arrange(RMR.MS.by.Treat, MMR.MS.by.Treat, AAS.MS.by.Treat, Details,
nrow = 2, top = "Mass Specific Metabolic Rate and Scope by Treatment")
RMR.MS.by.Fam = ggplot(data = Mass.Spec, aes(x = as.factor(Family), y = RMR.MS)) +
my.theme + theme_bw() + geom_boxplot() + xlab("Parent Group") +
ylab("Mass Specific Resting \n Metabolic Rate (mg O2/kg/h)")
RMR.MS.by.Fam = ggplot(data = Mass.Spec, aes(x = as.factor(Family), y = RMR.MS)) +
my.theme + theme_bw() + geom_boxplot() + xlab("Parent Group") +
ylab("Mass Specific Resting \n Metabolic Rate (mg O2/kg/h)")
MMR.MS.Fam = ggplot(data = Mass.Spec, aes(x = as.factor(Family), y = MMR.MS)) +
my.theme + theme_bw() + geom_boxplot() + xlab("Family")  +
ylab("Mass Specific Maximum \n Metabolic Rate (mg O2/kg/h)")
MMR.MS.Fam = ggplot(data = Mass.Spec, aes(x = as.factor(Family), y = MMR.MS)) +
my.theme + theme_bw() + geom_boxplot() + xlab("Family")  +
ylab("Mass Specific Maximum \n Metabolic Rate (mg O2/kg/h)")
AAS.MS.Fam = ggplot(data = Mass.Spec, aes(x = as.factor(Family), y = AAS.MS)) +
my.theme + theme_bw() + geom_boxplot() + xlab("Family")  +
ylab("Mass Specific Absolute \n Aerobic Scope")
grid.arrange(RMR.by.Fam, MMR.by.Fam, AAS.by.Fam, CTM.by.Fam,
nrow = 2, top = "Mass Specific Metabolic Rate and Scope by Treatment")
MMR.MS.m3 = lmer(log(MMR.MS) ~ Offspring.Acc +
(1|Mother.ID) + (1|Father.ID), REML = FALSE, data = MMR.MS.Data)
Trout = read.csv("BrookTrout.csv")
setwd("/home/joshk/git_repositories/BrookTrout_TG/Data")
Trout = read.csv("BrookTrout.csv")
Trout = subset(Trout, !is.na(Mother.ID))
Trout = subset(Trout, !is.na(Father.ID))
Trout$Offspring.Acc = as.factor(Trout$Offspring.Acc)
Trout$Mother.Acc = as.factor(Trout$Mother.Acc)
Trout$Father.Acc = as.factor(Trout$Father.Acc)
Trout$Mother.ID = as.factor(Trout$Mother.ID)
Trout$Father.ID = as.factor(Trout$Father.ID)
library('easypackages')
libraries('car','dotwhisker',"dplyr","ggplot2","grid","gridExtra",
"knitr","lme4","magrittr", "MuMIn", "nlme","purrr","rmarkdown")
Mass.Spec = Trout[,c(1:6, 11:17)]
N.Mass.Spec = Trout[,c(1:10, 14:17)]
my.theme = theme(panel.grid.minor = element_blank(),
axis.title = element_text(size = 14, family = "Noto Sans"),
axis.text = element_text(size = 14, colour = "black", family = "Noto Sans"),
axis.title.y = element_text(angle = 0, vjust = 0.5), panel.grid.major =
element_line(colour = "grey75"), legend.title = element_text(size = 14,
colour = "black", family = "Noto Sans"), legend.text = element_text(size = 12,
colour = "black", family = "Noto Sans"))
my.theme.dw = theme(panel.grid.minor = element_blank(), panel.grid.major = element_blank(),
axis.title = element_text(size = 12, family = "Noto Sans"),
axis.text = element_text(size = 12, colour = "black", family = "Noto Sans"),
legend.title = element_text(size = 12,
colour = "black", family = "Noto Sans"), legend.text = element_text(size = 12,
colour = "black", family = "Noto Sans"))
my.theme.diag = theme(panel.grid.minor = element_blank(), panel.grid.major = element_blank(),
axis.title = element_text(size = 8, family = "Noto Sans"),
axis.text = element_text(size = 8, colour = "black", family = "Noto Sans"),
legend.title = element_text(size = 8,
colour = "black", family = "Noto Sans"), legend.text = element_text(size = 8,
colour = "black", family = "Noto Sans"))
{
RMR.MS.Hist = ggplot(data = Mass.Spec, aes(x = RMR.MS)) +
geom_histogram(colour = "black", fill = "royalblue") + my.theme + theme_bw() +
geom_vline(xintercept=with(na.omit(Mass.Spec), mean(RMR.MS)), size = 1.25,
colour="darkred", linetype = "dotted") + xlab("Resting Metabolic \n Rate (mg O2/h)")
MMR.MS.Hist = ggplot(data = Mass.Spec, aes(x = MMR.MS)) +
geom_histogram(colour = "black", fill = "royalblue") + my.theme + theme_bw() +
geom_vline(xintercept=with(na.omit(Mass.Spec), mean(MMR.MS)), size = 1.25,
colour="darkred", linetype = "dotted") + xlab("Maximum Metabolic \n Rate (mg O2/h)")
AAS.MS.Hist = ggplot(data = Mass.Spec, aes(x = AAS.MS)) +
geom_histogram(colour = "black", fill = "royalblue") + my.theme + theme_bw() +
geom_vline(xintercept=with(na.omit(Mass.Spec), mean(AAS.MS)), size = 1.25,
colour="darkred", linetype = "dotted") + xlab("Absolute Aerobic \n Scope")
RMR.Hist = ggplot(data = N.Mass.Spec, aes(x = RMR)) +
geom_histogram(colour = "black", fill = "royalblue") + my.theme + theme_bw() +
geom_vline(xintercept=with(na.omit(N.Mass.Spec), mean(RMR)), size = 1.25,
colour="darkred", linetype = "dotted") + xlab("Resting Metabolic \n Rate (mg O2/h)")
MMR.Hist = ggplot(data = N.Mass.Spec, aes(x = MMR)) +
geom_histogram(colour = "black", fill = "royalblue") + my.theme + theme_bw() +
geom_vline(xintercept=with(na.omit(N.Mass.Spec), mean(MMR)), size = 1.25,
colour="darkred", linetype = "dotted") + xlab("Maximum Metabolic \n Rate (mg O2/h)")
AAS.Hist = ggplot(data = N.Mass.Spec, aes(x = AAS)) +
geom_histogram(colour = "black", fill = "royalblue") + my.theme + theme_bw() +
geom_vline(xintercept=with(na.omit(N.Mass.Spec), mean(AAS)), size = 1.25,
colour="darkred", linetype = "dotted") + xlab("Absolute Aerobic \n Scope")
}
grid.arrange(RMR.MS.Hist, MMR.MS.Hist, AAS.MS.Hist,
RMR.Hist, MMR.Hist, AAS.Hist, nrow = 2,
top = "Row 1 : Mass Specific, Row 2: Non-Mass Specific")
Mass.hist = ggplot(data = Trout, aes(x = Mass)) +
geom_histogram(colour = "black", fill = "royalblue") + my.theme + theme_bw() +
geom_vline(xintercept=with(Trout, mean(Mass)), size = 1.25,
colour="darkred", linetype = "dotted") + xlab("Mass")
CTM.hist = ggplot(data = Trout, aes(x = CTM)) +
geom_histogram(colour = "black", fill = "royalblue") + my.theme + theme_bw() +
geom_vline(xintercept=with(subset(N.Mass.Spec, !is.na(CTM)), mean(CTM)), size = 1.25,
colour="darkred", linetype = "dotted") + xlab("Critical Thermal Maximum (Degrees C)")
grid.arrange(Mass.hist, CTM.hist, nrow = 1)
# Boxplots
{
Mass.plot1 = ggplot(data = N.Mass.Spec, aes(x = as.factor(Parent.group), y = Mass)) +
my.theme + theme_bw() + geom_boxplot(fill = "cadetblue") + xlab("Parent Group")
Mass.plot2 = ggplot(data = N.Mass.Spec, aes(x = as.factor(Family), y = Mass)) +
my.theme + theme_bw() + geom_boxplot(fill = "mediumorchid") + xlab("Family")
Maternal.Bin = ggplot(data = N.Mass.Spec, aes(x = as.factor(Mother.Acc), y = Mass)) +
my.theme + theme_bw() + geom_boxplot(fill = "gold2") + xlab("Maternal Acclimation")
Paternal.Bin = ggplot(data = N.Mass.Spec, aes(x = as.factor(Father.Acc), y = Mass)) +
my.theme + theme_bw() + geom_boxplot(fill = "darkseagreen2") + xlab("Paternal Acclimation")
Offspring.Bin = ggplot(data = N.Mass.Spec, aes(x = as.factor(Offspring.Acc), y = Mass)) +
my.theme + theme_bw() + geom_boxplot(fill = "lightcoral") + xlab("Offspring Acclimation")
Details = ggplot(data = data.frame("x" = c(1:100), "y" = c(1:100)), aes(x = x, y = y)) +
theme_void() + theme(legend.position="none") + annotate("text", x = 25, y = 70, label =
"Central lines represent the \n median of each category.")
}
grid.arrange(Mass.plot1, Mass.plot2, Maternal.Bin, Paternal.Bin, Offspring.Bin,
Details, nrow = 3, top = "Mass by Group")
RMR.by.Treat = ggplot(data = N.Mass.Spec, aes(x = as.factor(Parent.group), y = RMR)) +
my.theme + theme_bw() + geom_boxplot(fill = "cadetblue") + xlab("Parent Group") +
ylab("Resting Metabolic Rate \n (mg O2/h)")
MMR.by.Treat = ggplot(data = N.Mass.Spec, aes(x = as.factor(Parent.group), y = AAS)) +
my.theme + theme_bw() + geom_boxplot(fill = "palegreen3") + xlab("Parent Group") +
ylab("Maximum Metabolic Rate \n (mg O2/h)")
AAS.by.Treat = ggplot(data = N.Mass.Spec, aes(x = as.factor(Parent.group), y = RMR)) +
my.theme + theme_bw() + geom_boxplot(fill = "tomato1") + xlab("Parent Group")	+
ylab("Absolute Aerobic Scope")
CTM.by.Treat = ggplot(data = N.Mass.Spec, aes(x = as.factor(Parent.group), y = CTM)) +
my.theme + theme_bw() + geom_boxplot(fill = "thistle") + xlab("Parent Group") +
ylab("Critical Thermal Maximum \n (Degrees C)")
grid.arrange(RMR.by.Treat, MMR.by.Treat, AAS.by.Treat, CTM.by.Treat,
nrow = 2, top = "Metabolic Rate, Scope, and Critical Thermal Max by Treatment")
RMR.by.Fam = ggplot(data = N.Mass.Spec, aes(x = as.factor(Family), y = RMR)) +
my.theme + theme_bw() + geom_boxplot(fill = "cadetblue") + xlab("Parent Group") +
ylab("Resting Metabolic Rate \n (mg O2/h)")
MMR.by.Fam = ggplot(data = N.Mass.Spec, aes(x = as.factor(Family), y = MMR)) +
my.theme + theme_bw() + geom_boxplot(fill = "palegreen3") + xlab("Family") +
ylab("Maximum Metabolic Rate \n (mg O2/h)")
AAS.by.Fam = ggplot(data = N.Mass.Spec, aes(x = as.factor(Family), y = AAS)) +
my.theme + theme_bw() + geom_boxplot(fill = "tomato1") + xlab("Family")	+
ylab("Absolute Aerobic Scope")
CTM.by.Fam = ggplot(data = N.Mass.Spec, aes(x = as.factor(Family), y = CTM)) +
my.theme + theme_bw() + geom_boxplot(fill = "thistle") + xlab("Family") +
ylab("Critical Thermal Maximum \n (Degrees C)")
grid.arrange(RMR.by.Fam, MMR.by.Fam, AAS.by.Fam, CTM.by.Fam,
nrow = 2, top = "Metabolic Rate, Scope, and Critical Thermal Max by Family")
RMR.NMS.Data = subset(N.Mass.Spec, !is.na(RMR))
MMR.NMS.Data = subset(N.Mass.Spec, !is.na(MMR))
AAS.NMS.Data = subset(N.Mass.Spec, !is.na(AAS))
CTM.NMS.Data = subset(N.Mass.Spec, !is.na(CTM))
RMR.MS.Data = subset(Mass.Spec, !is.na(RMR.MS))
MMR.MS.Data = subset(Mass.Spec, !is.na(MMR.MS))
AAS.MS.Data = subset(Mass.Spec, !is.na(AAS.MS))
RMR.model = lmer(RMR ~ Mother.Acc*Father.Acc*Offspring.Acc + Mass + (1|Mother.ID) +(1|Father.ID),
REML = FALSE, data = RMR.NMS.Data)
MMR.model = lmer(MMR ~ Mother.Acc*Father.Acc*Offspring.Acc + Mass + (1|Mother.ID) +(1|Father.ID),
REML = FALSE, data = MMR.NMS.Data)
AAS.model = lmer(AAS ~ Mother.Acc*Father.Acc*Offspring.Acc + Mass + (1|Mother.ID) +(1|Father.ID),
REML = FALSE, data = AAS.NMS.Data)
CTM.model = lmer(CTM ~ Mother.Acc*Father.Acc*Offspring.Acc + Mass + (1|Mother.ID) +(1|Father.ID),
REML = FALSE, weights = Mass, data = CTM.NMS.Data)
{
RMR.Dev = abs(summary(RMR.model)$AICtab[[4]]/summary(RMR.model)$AICtab[[5]])
MMR.Dev = abs(summary(MMR.model)$AICtab[[4]]/summary(MMR.model)$AICtab[[5]])
AAS.Dev = abs(summary(AAS.model)$AICtab[[4]]/summary(AAS.model)$AICtab[[5]])
CTM.Dev = abs(summary(CTM.model)$AICtab[[4]]/summary(CTM.model)$AICtab[[5]])
}
print(paste("RMR:", RMR.Dev, "MMR:", MMR.Dev, "AAS:", AAS.Dev, "CTM:", CTM.Dev, sep = " "))
RMR.model = lmer(log(RMR) ~ Mother.Acc*Father.Acc*Offspring.Acc + log(Mass) + (1|Mother.ID) +(1|Father.ID),
REML = FALSE, data = RMR.NMS.Data)
MMR.model = lmer(log(MMR) ~ Mother.Acc*Father.Acc*Offspring.Acc + log(Mass) + (1|Mother.ID) +(1|Father.ID),
REML = FALSE, data = MMR.NMS.Data)
AAS.model = lmer(AAS ~ Mother.Acc*Father.Acc*Offspring.Acc + log(Mass) + (1|Mother.ID) +(1|Father.ID),
REML = FALSE, data = AAS.NMS.Data)
CTM.model = lmer(CTM ~ Mother.Acc*Father.Acc*Offspring.Acc + log(Mass) + (1|Mother.ID) +(1|Father.ID),
REML = FALSE, weights = Mass, data = CTM.NMS.Data)
# Double-checking dispersion
{
RMR.Dev = abs(summary(RMR.model)$AICtab[[4]]/summary(RMR.model)$AICtab[[5]])
MMR.Dev = abs(summary(MMR.model)$AICtab[[4]]/summary(MMR.model)$AICtab[[5]])
AAS.Dev = abs(summary(AAS.model)$AICtab[[4]]/summary(AAS.model)$AICtab[[5]])
CTM.Dev = abs(summary(CTM.model)$AICtab[[4]]/summary(CTM.model)$AICtab[[5]])
}
print(paste("RMR:", RMR.Dev, "MMR:", MMR.Dev, "AAS:", AAS.Dev, "CTM:", CTM.Dev, sep = " "))
RMR.NMS.Data %>% group_by(Offspring.Acc, Father.Acc, Mother.Acc) %>%
summarize(N = n()) %>% as.data.frame() %>% summarize(Mean = mean(N), SD = sd(N))
require('pwr')
num_df = nrow(summary(RMR.model)$coefficients) - 1
den_df = nrow(RMR.NMS.Data) - (num_df + 1)
pwr.f2.test(u = num_df, v = den_df, f2 = 0.05, sig.level = 0.05)
AIC.Results.NMS = vector('list', 4)
models = c("RMR.model", "MMR.model", "AAS.model", "CTM.model")
for (i in 1:length(models)){
AIC.Results.NMS[[i]] = subset(dredge(get(models[i]), rank = "AICc",
extra = list(R2 = function(x) r.squaredGLMM(x))), delta < 5)
}
for (i in 1:length(models)){
AIC.Results.NMS[[i]] = subset(dredge(get(models[i]), rank = "AICc",
extra = list(R2 = function(x) r.squaredGLMM(x))), delta < 5)
}
Select.Models.NMS = c()
Delta.NMS = c()
Response = c()
Marg.R2 = c()
Cond.R2 = c()
for (j in 1:length(AIC.Results.NMS)){
for (i in 1:length(attr(AIC.Results.NMS[[j]], "model.calls"))){
Select.Models.NMS[i] = gsub(".*~ ", "", paste(attr(AIC.Results.NMS[[j]], "model.calls")[[i]])[2])
Delta.NMS[i] = AIC.Results.NMS[[j]]$delta[i]
Response[i] = gsub(" ~.*", "", paste(attr(AIC.Results.NMS[[j]], "model.calls")[[i]])[2])
Marg.R2[i] = AIC.Results.NMS[[j]]$R21[i]
Cond.R2[i] = AIC.Results.NMS[[j]]$R22[i]
if (i == length(attr(AIC.Results.NMS[[j]], "model.calls"))){
Table = data.frame("Reponse.Type" = "Mass Independant", "Response" = Response,
"Delta.AIC" = Delta.NMS, "Marginal.R2" = Marg.R2, "Conditional.R2" = Cond.R2,
"Equation" = Select.Models.NMS)
assign(paste("AIC.Selection", "NMS", j, sep = "_"), Table)
}
}
Select.Models.NMS = c()
Delta.NMS = c()
Response = c()
Marg.R2 = c()
Cond.R2 = c()
}
AIC.Selection.NMS = rbind(AIC.Selection_NMS_1, AIC.Selection_NMS_2, AIC.Selection_NMS_3, AIC.Selection_NMS_4)
RMR.MS.model = lmer(RMR.MS ~ Mother.Acc*Father.Acc*Offspring.Acc + (1|Mother.ID) + (1|Father.ID),
REML = FALSE, data = RMR.MS.Data)
MMR.MS.model = lmer(MMR.MS ~ Mother.Acc*Father.Acc*Offspring.Acc + (1|Mother.ID) + (1|Father.ID),
REML = FALSE, data = MMR.MS.Data)
AAS.MS.model = lmer(AAS.MS ~ Mother.Acc*Father.Acc*Offspring.Acc + (1|Mother.ID) + (1|Father.ID),
REML = FALSE, data = AAS.MS.Data)
{
RMR.MS.Dev = abs(summary(RMR.MS.model)$AICtab[[4]]/summary(RMR.MS.model)$AICtab[[5]])
MMR.MS.Dev = abs(summary(MMR.MS.model)$AICtab[[4]]/summary(MMR.MS.model)$AICtab[[5]])
AAS.MS.Dev = abs(summary(AAS.MS.model)$AICtab[[4]]/summary(AAS.MS.model)$AICtab[[5]])
}
print(paste("RMR:", RMR.MS.Dev, "MMR:", MMR.MS.Dev, "AAS:", AAS.MS.Dev, sep = " "))
RMR.MS.model = lmer(log(RMR.MS) ~ Mother.Acc*Father.Acc*Offspring.Acc + (1|Mother.ID) + (1|Father.ID),
REML = FALSE, data = RMR.MS.Data)
MMR.MS.model = lmer(log(MMR.MS) ~ Mother.Acc*Father.Acc*Offspring.Acc + (1|Mother.ID) + (1|Father.ID),
REML = FALSE, data = MMR.MS.Data)
AAS.MS.model = lmer(log(AAS.MS) ~ Mother.Acc*Father.Acc*Offspring.Acc + (1|Mother.ID) + (1|Father.ID),
REML = FALSE, data = AAS.MS.Data)
{
RMR.MS.Dev = abs(summary(RMR.MS.model)$AICtab[[4]]/summary(RMR.MS.model)$AICtab[[5]])
MMR.MS.Dev = abs(summary(MMR.MS.model)$AICtab[[4]]/summary(MMR.MS.model)$AICtab[[5]])
AAS.MS.Dev = abs(summary(AAS.MS.model)$AICtab[[4]]/summary(AAS.MS.model)$AICtab[[5]])
}
print(paste("RMR:", RMR.MS.Dev, "MMR:", MMR.MS.Dev, "AAS:", AAS.MS.Dev, sep = " "))
AIC.Results.MS = vector('list', 3)
models.MS = c("RMR.MS.model", "MMR.MS.model", "AAS.MS.model")
for (i in 1:length(models.MS)){
AIC.Results.MS[[i]] = subset(dredge(get(models.MS[i]), rank = "AICc",
extra = list(R2 = function(x) r.squaredGLMM(x))), delta < 5)
}
for (i in 1:length(models.MS)){
AIC.Results.MS[[i]] = subset(dredge(get(models.MS[i]), rank = "AICc",
extra = list(R2 = function(x) r.squaredGLMM(x))), delta < 5)
}
Select.Models.MS = c()
Delta.MS = c()
Response.MS = c()
Marg.R2.MS = c()
Cond.R2.MS = c()
for (j in 1:length(AIC.Results.MS)){
for (i in 1:length(attr(AIC.Results.MS[[j]], "model.calls"))){
Select.Models.MS[i] = gsub(".*~ ", "", paste(attr(AIC.Results.MS[[j]], "model.calls")[[i]])[2])
Delta.MS[i] = AIC.Results.MS[[j]]$delta[i]
Response.MS[i] = gsub(" ~.*", "", paste(attr(AIC.Results.MS[[j]], "model.calls")[[i]])[2])
Marg.R2.MS[i] = AIC.Results.MS[[j]]$R21[i]
Cond.R2.MS[i] = AIC.Results.MS[[j]]$R22[i]
if (i == length(attr(AIC.Results.MS[[j]], "model.calls"))){
Table = data.frame("Reponse.Type" = "Mass-Specific", "Response" = Response.MS,
"Delta.AIC" = Delta.MS, "Marginal.R2" = Marg.R2.MS, "Conditional.R2" = Cond.R2.MS,
"Equation" = Select.Models.MS)
assign(paste("AIC.Selection", "MS", j, sep = "_"), Table)
}
}
Select.Models.MS = c()
Delta.MS = c()
Response.MS = c()
Marg.R2.MS = c()
Cond.R2.MS = c()
}
AIC.Selection.MS = rbind(AIC.Selection_MS_1, AIC.Selection_MS_2, AIC.Selection_MS_3)
AIC.Selection = rbind(AIC.Selection.MS, AIC.Selection.NMS)
MMR.MS.m1 = lmer(log(MMR.MS) ~ Father.Acc + Offspring.Acc +
(1|Mother.ID) + (1|Father.ID), REML = FALSE, data = MMR.MS.Data)
summary(MMR.MS.m1)$varcor
Out = MMR.MS.Data[c(which(residuals(MMR.MS.m1, type = "deviance") >= 0.22)),]
In = MMR.MS.Data[-c(which(residuals(MMR.MS.m1, type = "deviance") >= 0.22)),]
Out = Out %>% mutate(Group = "Outlier")
In = In %>% mutate(Group = "Inlier")
MMR.MS.Data.mod = rbind(Out, In)
Sweep = as.data.frame(ddply(MMR.MS.Data.mod, ~Group, summarise,
Off.Ratio = sum(Offspring.Acc == 1)/sum(Offspring.Acc == 2),
Pat.Ratio = sum(Father.Acc == 1)/sum(Father.Acc == 2)))
library('plyr')
Sweep = as.data.frame(ddply(MMR.MS.Data.mod, ~Group, summarise,
Off.Ratio = sum(Offspring.Acc == 1)/sum(Offspring.Acc == 2),
Pat.Ratio = sum(Father.Acc == 1)/sum(Father.Acc == 2)))
Global = data.frame("Group" = "Global", "Off.Ratio" = length(which(MMR.MS.Data.mod$Offspring.Acc ==1))/
length(which(MMR.MS.Data.mod$Offspring.Acc ==2)),
"Pat.Ratio" = length(which(MMR.MS.Data.mod$Father.Acc ==1))/
length(which(MMR.MS.Data.mod$Father.Acc ==2)))
Sweep = rbind(Sweep, Global)
MMR.MS.m1 = lme(log(MMR.MS) ~ Father.Acc + Offspring.Acc, random =
list(~1|Mother.ID, ~1|Father.ID), weights = varIdent(form = ~1|Father.Acc),
data = MMR.MS.Data)
MMR.MS.m1 = lmer(log(MMR.MS) ~ Father.Acc + Offspring.Acc +
(1|Mother.ID) + (1|Father.ID), REML = FALSE, data = MMR.MS.Data)
MMR.dwdata = data.frame(term = c(rownames(summary(MMR.MS.m1)$coefficients)),
estimate = c(summary(MMR.MS.m1)$coefficients[1:3]),
std.error = c(summary(MMR.MS.m1)$coefficients[4:6]),
statistic = c(summary(MMR.MS.m1)$coefficients[7:9]))
p.values = c()
for (i in 1:nrow(MMR.dwdata)){
p.values[i] = pt(abs(MMR.dwdata$statistic[i]), df = 8, lower.tail = FALSE)
}
MMR.dwdata$p.values = round(p.values, 3)
MMR.dwdata$term = c("(Intercept)", "Sire Acclimation Temperature",
"Offspring Acclimation Temperature")
MMR.MS.m2 = lmer(log(MMR.MS) ~ Father.Acc + Mother.Acc + Offspring.Acc +
(1 | Mother.ID) + (1 | Father.ID), REML = FALSE, data = MMR.MS.Data)
summary(MMR.MS.m2)$varcor
r.squaredGLMM(MMR.MS.m2)
MMR.dwdata2 = data.frame(term = c(rownames(summary(MMR.MS.m2)$coefficients)),
estimate = c(summary(MMR.MS.m2)$coefficients[1:4]),
std.error = c(summary(MMR.MS.m2)$coefficients[5:8]),
statistic = c(summary(MMR.MS.m2)$coefficients[9:12]))
p.values = c()
for (i in 1:nrow(MMR.dwdata2)){
p.values[i] = pt(abs(MMR.dwdata2$statistic[i]), df = 8, lower.tail = FALSE)
}
MMR.dwdata2$p.values = round(p.values, 3)
MMR.dwdata2$term = c("(Intercept)", "Sire Acclimation Temperature",
"Dam Acclimation Temperature", "Offspring Acclimation Temperature")
print(MMR.dwdata2)
MMR.dwdata2$estimate = MMR.dwdata2$estimate*20
MMR.dwdata2$std.error= MMR.dwdata2$std.error*20
MMR.dwdata2 %>%
dwplot(style = "distribution", show_intercept = FALSE) + theme_bw() + theme(legend.position = "none") + my.theme.dw +
xlab("Coefficient") + ylab("") + geom_vline(xintercept = 0, colour = "black", linetype = 2) +
scale_fill_manual(values = "cornflowerblue") + scale_colour_manual(values = "black")  +
scale_x_continuous(limits = c(-5.0,5.0), breaks = c(-5.0, -2.5, 0, 2.5, 5.0), label = c("-0.25", "-0.13", "0", "0.13", "0.25")) +
annotate("text", x = -4.0, y = 1.4, label = paste("p = ", MMR.dwdata2$p.value[4])) +
annotate("text", x = 2.5, y = 2.3, label = paste("p = ", MMR.dwdata2$p.value[3])) +
annotate("text", x = 4.5, y = 3.2, label = paste("p = ", MMR.dwdata2$p.value[2]))
MMR.dwdata2$estimate = MMR.dwdata2$estimate/20
MMR.MS.m3 = lmer(log(MMR.MS) ~ Offspring.Acc +
(1|Mother.ID) + (1|Father.ID), REML = FALSE, data = MMR.MS.Data)
summary(MMR.MS.m3)$varcor
ggplot(data = data.frame("Res" = residuals(MMR.MS.m3, type = "deviance")),
aes(x = 1:nrow(MMR.MS.Data), y = Res)) + my.theme + theme_bw() +
geom_point(size = 3, colour = "mediumseagreen", alpha = 0.5) + xlab("Row Number") +
ylab("Deviance Residuals")
ggplot(data = data.frame("Res" = residuals(MMR.MS.m3), "Fit" = predict(MMR.MS.m3)),
aes(x = Fit, y = Res)) + my.theme + theme_bw() +
geom_point(size = 3, colour = "cornflowerblue", alpha = 0.5) + xlab("Fitted Values") +
ylab("Deviance Residuals")
ggplot(data = data.frame("Res" = residuals(MMR.MS.m3), "Resp" = log(MMR.MS.Data$MMR.MS)),
aes(x = Resp, y = Res)) + my.theme + theme_bw() +
geom_point(size = 3, colour = "mediumorchid", alpha = 0.5) +
xlab("log Mass Specific Metabolic Rate") + ylab("Deviance Residuals")
ggplot(data.frame("Res" = residuals(MMR.MS.m3), "Fit" = predict(MMR.MS.m3)),
aes(sample=Res)) + stat_qq(colour = "gold") + stat_qq_line() + my.theme + theme_bw()
ggplot(data.frame(Res = c(residuals(MMR.MS.m3, type = "deviance")), Model = "Model1"),
aes(Res, fill = Model, colour = Model)) + geom_histogram(alpha = 0.5) + theme_bw() +
my.theme + xlab("Deviance Residuals") + ylab("Count") + scale_fill_manual(values =
c("cornflowerblue")) + scale_colour_manual(values = c("black")) + theme(legend.position = "none") +
geom_density(alpha = 0.5, aes(y=0.3/8 * ..count..))
ggplot(data.frame(Res = c(residuals(MMR.MS.m3, type = "deviance")),
Off.Acc = MMR.MS.Data$Offspring.Acc),
aes(Res, fill = Off.Acc, colour = Off.Acc)) + geom_histogram(alpha = 0.5, bins = 20) + theme_bw() +
my.theme + xlab("Pearson Residuals") + ylab("Count") + scale_fill_manual(values =
c("mediumorchid", "royalblue")) + scale_colour_manual(values = c("black", "black")) +
geom_vline(xintercept = mean(residuals(MMR.MS.m3, type = "deviance")), linetype="dashed", size = 1) +
theme(legend.position = "top")
ggplot(data.frame(Res = c(residuals(MMR.MS.m3, type = "deviance")),
Off.Acc = MMR.MS.Data$Offspring.Acc),
aes(Res, fill = Off.Acc, colour = Off.Acc)) + geom_histogram(alpha = 0.5, bins = 20) + theme_bw() +
my.theme + xlab("Pearson Residuals") + ylab("Count") + scale_fill_manual(values =
c("mediumorchid", "royalblue")) + scale_colour_manual(values = c("black", "black")) +
geom_vline(xintercept = mean(residuals(MMR.MS.m3, type = "deviance")), linetype="dashed", size = 1) +
theme(legend.position = "top")
ggplot(data.frame(Res = c(residuals(MMR.MS.m3, type = "deviance")),
Pat.Acc = MMR.MS.Data$Father.Acc),
aes(Res, fill = Pat.Acc, colour = Pat.Acc)) + geom_histogram(alpha = 0.5, bins = 20) + theme_bw() +
my.theme + xlab("Pearson Residuals") + ylab("Count") + scale_fill_manual(values =
c("mediumorchid", "royalblue")) + scale_colour_manual(values = c("black", "black")) +
geom_vline(xintercept = mean(residuals(MMR.MS.m3, type = "deviance")), linetype="dashed", size = 1) +
theme(legend.position = "top")
ggplot(data.frame(Res = c(residuals(MMR.MS.m3, type = "deviance")),
PG = as.factor(MMR.MS.Data$Parent.group)),
aes(Res, fill = PG, colour = PG)) + geom_histogram(alpha = 0.5, bins = 20) + theme_bw() +
my.theme + xlab("Pearson Residuals") + ylab("Count") + scale_fill_manual(values =
c("mediumorchid", "royalblue", "mediumseagreen", "gold2")) +
scale_colour_manual(values = c("black", "black", "black", "black")) +
geom_vline(xintercept = mean(residuals(MMR.MS.m3, type = "deviance")), linetype="dashed", size = 1) +
theme(legend.position = "top")
ggplot(data = MMR.MS.Data, aes(x = as.factor(Offspring.Acc),
y = residuals(MMR.MS.m3, "deviance"), fill = as.factor(Offspring.Acc))) +
my.theme + theme_bw() + geom_boxplot(lwd=1) + scale_fill_manual(values=c("ivory",
"royalblue3")) +
xlab("Sire Acclimation Temperature") + ylab("Deviance Residuals") +
theme(legend.position="top")
rownames(summary(MMR.MS.m3)$coefficients))
rownames(summary(MMR.MS.m3)$coefficients)
MMR.dwdata3 = data.frame(term = c(rownames(summary(MMR.MS.m3)$coefficients)),
estimate = c(summary(MMR.MS.m3)$coefficients[1:2]),
std.error = c(summary(MMR.MS.m3)$coefficients[3:4]),
statistic = c(summary(MMR.MS.m3)$coefficients[5:6]))
MMR.dwdata3
p.values = c()
for (i in 1:nrow(MMR.dwdata3)){
p.values[i] = pt(abs(MMR.dwdata3$statistic[i]), df = 8, lower.tail = FALSE)
}
MMR.dwdata3$p.values = round(p.values, 3)
MMR.dwdata3$term = c("(Intercept)", "Offspring Acclimation Temperature")
MMR.dwdata3$estimate = MMR.dwdata3$estimate*20
MMR.dwdata3$std.error= MMR.dwdata3$std.error*20
MMR.dwdata3 %>%
dwplot(style = "distribution", show_intercept = FALSE) + theme_bw() + theme(legend.position = "none") +
my.theme.dw +
xlab("Coefficient") + ylab("") + geom_vline(xintercept = 0, colour = "black", linetype = 2) +
scale_fill_manual(values = "mediumseagreen") + scale_colour_manual(values = "black")  +
scale_x_continuous(limits = c(-6.0,6.0), breaks = c(-6.0, -3.0, 0, 3.0, 6.0),
label = c("-0.30", "-0.15","0", "0.15", "0.30")) +
annotate("text", x = -3.0, y = 1.3, label = paste("p = ", MMR.dwdata3$p.value[4])) +
annotate("text", x = -4.4, y = 2.3, label = paste("p = ", MMR.dwdata3$p.value[3])) +
annotate("text", x = 5.0, y = 3.3, label = paste("p = ", MMR.dwdata3$p.value[2]))
MMR.dwdata3 %>%
dwplot(style = "distribution", show_intercept = FALSE) + theme_bw() + theme(legend.position = "none") +
my.theme.dw +
xlab("Coefficient") + ylab("") + geom_vline(xintercept = 0, colour = "black", linetype = 2) +
scale_fill_manual(values = "mediumseagreen") + scale_colour_manual(values = "black")  +
scale_x_continuous(limits = c(-6.0,6.0), breaks = c(-6.0, -3.0, 0, 3.0, 6.0),
label = c("-0.30", "-0.15","0", "0.15", "0.30")) +
annotate("text", x = -3.0, y = 1.3, label = paste("p = ", MMR.dwdata3$p.value[2]))
MMR.dwdata3 %>%
dwplot(style = "distribution", show_intercept = FALSE) + theme_bw() + theme(legend.position = "none") +
my.theme.dw +
xlab("Coefficient") + ylab("") + geom_vline(xintercept = 0, colour = "black", linetype = 2) +
scale_fill_manual(values = "mediumseagreen") + scale_colour_manual(values = "black")  +
scale_x_continuous(limits = c(-6.0,6.0), breaks = c(-6.0, -3.0, 0, 3.0, 6.0),
label = c("-0.30", "-0.15","0", "0.15", "0.30")) +
annotate("text", x = -5.0, y = 1.3, label = paste("p = ", MMR.dwdata3$p.value[2]))
MMR.dwdata3 %>%
dwplot(style = "distribution", show_intercept = FALSE) + theme_bw() + theme(legend.position = "none") +
my.theme.dw +
xlab("Coefficient") + ylab("") + geom_vline(xintercept = 0, colour = "black", linetype = 2) +
scale_fill_manual(values = "mediumseagreen") + scale_colour_manual(values = "black")  +
scale_x_continuous(limits = c(-6.0,6.0), breaks = c(-6.0, -3.0, 0, 3.0, 6.0),
label = c("-0.30", "-0.15","0", "0.15", "0.30")) +
annotate("text", x = -6.0, y = 1.3, label = paste("p = ", MMR.dwdata3$p.value[2]))
MMR.dwdata3 %>%
dwplot(style = "distribution", show_intercept = FALSE) + theme_bw() + theme(legend.position = "none") +
my.theme.dw +
xlab("Coefficient") + ylab("") + geom_vline(xintercept = 0, colour = "black", linetype = 2) +
scale_fill_manual(values = "mediumseagreen") + scale_colour_manual(values = "black")  +
scale_x_continuous(limits = c(-6.0,6.0), breaks = c(-6.0, -3.0, 0, 3.0, 6.0),
label = c("-0.30", "-0.15","0", "0.15", "0.30")) +
annotate("text", x = -4.0, y = 1.5, label = paste("p = ", MMR.dwdata3$p.value[2]))
MMR.dwdata3 %>%
dwplot(style = "distribution", show_intercept = FALSE) + theme_bw() + theme(legend.position = "none") +
my.theme.dw +
xlab("Coefficient") + ylab("") + geom_vline(xintercept = 0, colour = "black", linetype = 2) +
scale_fill_manual(values = "mediumseagreen") + scale_colour_manual(values = "black")  +
scale_x_continuous(limits = c(-6.0,6.0), breaks = c(-6.0, -3.0, 0, 3.0, 6.0),
label = c("-0.30", "-0.15","0", "0.15", "0.30")) +
annotate("text", x = -4.0, y = 1.5, label = paste("p =\n", MMR.dwdata3$p.value[2]))
